(PID.TID 0011.0001) 
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) //                      MITgcm UV
(PID.TID 0011.0001) //                      =========
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // execution environment starting up...
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // MITgcmUV version:  checkpoint67v
(PID.TID 0011.0001) // Build user:        eavesr
(PID.TID 0011.0001) // Build host:        atmlxint1
(PID.TID 0011.0001) // Build date:        Fri 19 Feb 12:24:44 GMT 2021
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Execution Environment parameter file "eedata"
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) ># Example "eedata" file
(PID.TID 0011.0001) ># Lines beginning "#" are comments
(PID.TID 0011.0001) >#  nTx      :: No. threads per process in X
(PID.TID 0011.0001) >#  nTy      :: No. threads per process in Y
(PID.TID 0011.0001) ># debugMode :: print debug msg (sequence of S/R calls)
(PID.TID 0011.0001) > &EEPARMS
(PID.TID 0011.0001) > nTx=1,
(PID.TID 0011.0001) > nTy=1,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) ># Note: Some systems use & as the namelist terminator (as shown here).
(PID.TID 0011.0001) >#       Other systems use a / character.
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0011.0001) //                                  ( and "eedata"       )
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001)      nPx =    4 ; /* No. processes in X */
(PID.TID 0011.0001)      nPy =    4 ; /* No. processes in Y */
(PID.TID 0011.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0011.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0011.0001)      sNx =   62 ; /* Tile size in X */
(PID.TID 0011.0001)      sNy =   62 ; /* Tile size in Y */
(PID.TID 0011.0001)      OLx =    2 ; /* Tile overlap distance in X */
(PID.TID 0011.0001)      OLy =    2 ; /* Tile overlap distance in Y */
(PID.TID 0011.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0011.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0011.0001)       Nr =    1 ; /* No. levels in the vertical   */
(PID.TID 0011.0001)       Nx =  248 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0011.0001)       Ny =  248 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0011.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0011.0001)   nProcs =   16 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0011.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0011.0001) usingMPI =    T ; /* Flag used to control whether MPI is in use */
(PID.TID 0011.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0011.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0011.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0011.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0011.0001)                   /*  other model components, through a coupler */
(PID.TID 0011.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0011.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0011.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0011.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0011.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0011.0001) 
(PID.TID 0011.0001) ======= Starting MPI parallel Run =========
(PID.TID 0011.0001)  My Processor Name (len: 10 ) = atmnode011
(PID.TID 0011.0001)  Located at (  2,  3) on processor grid (0:  3,0:  3)
(PID.TID 0011.0001)  Origin at  (   125,   187) on global grid (1:   248,1:   248)
(PID.TID 0011.0001)  North neighbor = processor 0008
(PID.TID 0011.0001)  South neighbor = processor 0010
(PID.TID 0011.0001)   East neighbor = processor 0015
(PID.TID 0011.0001)   West neighbor = processor 0007
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // Mapping of tiles to threads
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // Tile <-> Tile connectvity table
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // Tile number: 000015 (process no. = 000011)
(PID.TID 0011.0001) //        WEST: Tile = 000014, Process = 000007, Comm = messages
(PID.TID 0011.0001) //                bi = 000001, bj = 000001
(PID.TID 0011.0001) //        EAST: Tile = 000016, Process = 000015, Comm = messages
(PID.TID 0011.0001) //                bi = 000001, bj = 000001
(PID.TID 0011.0001) //       SOUTH: Tile = 000011, Process = 000010, Comm = messages
(PID.TID 0011.0001) //                bi = 000001, bj = 000001
(PID.TID 0011.0001) //       NORTH: Tile = 000003, Process = 000008, Comm = messages
(PID.TID 0011.0001) //                bi = 000001, bj = 000001
(PID.TID 0011.0001) 
(PID.TID 0011.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0011.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Parameter file "data"
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) ># Model parameters
(PID.TID 0011.0001) ># Continuous equation parameters
(PID.TID 0011.0001) > &PARM01
(PID.TID 0011.0001) > viscAh=4.E2,
(PID.TID 0011.0001) > f0=0.7E-4,
(PID.TID 0011.0001) > beta=2.E-11,
(PID.TID 0011.0001) > rhoConst=1027.,
(PID.TID 0011.0001) > gBaro=9.81,
(PID.TID 0011.0001) > rigidLid=.FALSE.,
(PID.TID 0011.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0011.0001) ># momAdvection=.FALSE.,
(PID.TID 0011.0001) > tempStepping=.FALSE.,
(PID.TID 0011.0001) > saltStepping=.FALSE.,
(PID.TID 0011.0001) > useSingleCpuIO=.TRUE.,
(PID.TID 0011.0001) > hFacMin=0.1,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) >
(PID.TID 0011.0001) ># Elliptic solver parameters
(PID.TID 0011.0001) > &PARM02
(PID.TID 0011.0001) > cg2dTargetResidual=1.E-7,
(PID.TID 0011.0001) > cg2dMaxIters=1000,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) >
(PID.TID 0011.0001) ># Time stepping parameters
(PID.TID 0011.0001) > &PARM03
(PID.TID 0011.0001) > nIter0=0,
(PID.TID 0011.0001) > nTimeSteps=10,
(PID.TID 0011.0001) > deltaT=5400.0,
(PID.TID 0011.0001) > pChkptFreq=31104000.0,
(PID.TID 0011.0001) > chkptFreq=25920000.0,
(PID.TID 0011.0001) > dumpFreq=5400.0,
(PID.TID 0011.0001) > monitorFreq=86400.,
(PID.TID 0011.0001) > monitorSelect=2,
(PID.TID 0011.0001) >#-for longer run (3.0 yr):
(PID.TID 0011.0001) ># nTimeSteps=77760,
(PID.TID 0011.0001) ># monitorFreq=864000.,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) >
(PID.TID 0011.0001) ># Gridding parameters
(PID.TID 0011.0001) > &PARM04
(PID.TID 0011.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0011.0001) > delX=248*5.E3,
(PID.TID 0011.0001) > delY=248*5.E3,
(PID.TID 0011.0001) > xgOrigin=-5.E3,
(PID.TID 0011.0001) > ygOrigin=-5.E3,
(PID.TID 0011.0001) > delR=5000.,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) >
(PID.TID 0011.0001) ># Input datasets
(PID.TID 0011.0001) > &PARM05
(PID.TID 0011.0001) > bathyFile='bathy.bin'
(PID.TID 0011.0001) > zonalWindFile='wind.bin',
(PID.TID 0011.0001) >#zonalWindFile='windx_siny.bin',
(PID.TID 0011.0001) > meridWindFile=,
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) 
(PID.TID 0011.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0011.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0011.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0011.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0011.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0011.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0011.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0011.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0011.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0011.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0011.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0011.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0011.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Parameter file "data.pkg"
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) ># Packages
(PID.TID 0011.0001) > &PACKAGES
(PID.TID 0011.0001) > &
(PID.TID 0011.0001) 
(PID.TID 0011.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0011.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled but not used ( useGAD                   = F )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0011.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0011.0001) 
(PID.TID 0011.0001) SET_PARMS: done
(PID.TID 0011.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0011.0001) // CMIN =         -5.000000000000000E+03
(PID.TID 0011.0001) // CMAX =         -5.000000000000000E+03
(PID.TID 0011.0001) // CINT =          0.000000000000000E+00
(PID.TID 0011.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0011.0001) //                  0.0: .
(PID.TID 0011.0001) // RANGE I (Lo:Hi:Step):(   123:   188:     1)
(PID.TID 0011.0001) // RANGE J (Lo:Hi:Step):(   250:   185:    -1)
(PID.TID 0011.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // END OF FIELD                                          =
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0011.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0011.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0011.0001) // CINT =          0.000000000000000E+00
(PID.TID 0011.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0011.0001) //                  0.0: .
(PID.TID 0011.0001) // RANGE I (Lo:Hi:Step):(   123:   188:     1)
(PID.TID 0011.0001) // RANGE J (Lo:Hi:Step):(   250:   185:    -1)
(PID.TID 0011.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // END OF FIELD                                          =
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Field hFacC at iteration          0
(PID.TID 0011.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0011.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0011.0001) // CINT =          0.000000000000000E+00
(PID.TID 0011.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0011.0001) //                  0.0: .
(PID.TID 0011.0001) // RANGE I (Lo:Hi:Step):(   123:   188:     1)
(PID.TID 0011.0001) // RANGE J (Lo:Hi:Step):(   250:   185:    -1)
(PID.TID 0011.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // END OF FIELD                                          =
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Field hFacW at iteration          0
(PID.TID 0011.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0011.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0011.0001) // CINT =          0.000000000000000E+00
(PID.TID 0011.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0011.0001) //                  0.0: .
(PID.TID 0011.0001) // RANGE I (Lo:Hi:Step):(   123:   188:     1)
(PID.TID 0011.0001) // RANGE J (Lo:Hi:Step):(   250:   185:    -1)
(PID.TID 0011.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // END OF FIELD                                          =
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Field hFacS at iteration          0
(PID.TID 0011.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0011.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0011.0001) // CINT =          0.000000000000000E+00
(PID.TID 0011.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0011.0001) //                  0.0: .
(PID.TID 0011.0001) // RANGE I (Lo:Hi:Step):(   123:   188:     1)
(PID.TID 0011.0001) // RANGE J (Lo:Hi:Step):(   250:   185:    -1)
(PID.TID 0011.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // END OF FIELD                                          =
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) GAD_INIT_FIXED: GAD_OlMinSize=  0  0  1
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // ===================================
(PID.TID 0011.0001) // GAD parameters :
(PID.TID 0011.0001) // ===================================
(PID.TID 0011.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) // ===================================
(PID.TID 0011.0001) INI_CG2D: CG2D normalisation factor =  2.0000000000000001E-04
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Model configuration
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) //
(PID.TID 0011.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0011.0001) //
(PID.TID 0011.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0011.0001)               'OCEANIC'
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0011.0001)                 2.000000000000000E+01       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0011.0001)                 3.000000000000000E+01       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0011.0001)                 4.000000000000000E+02
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0011.0001)                 2.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0011.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0011.0001)                      -1
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0011.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0011.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0011.0001)                 2.000000000000000E+02
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0011.0001)                -2.000000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0011.0001)                -8.000000000000000E-01
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0011.0001)                 1.000000000000000E-06
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) eosType =  /* Type of Equation of State */
(PID.TID 0011.0001)               'LINEAR'
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0011.0001)                 2.000000000000000E-04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/psu ) */
(PID.TID 0011.0001)                 7.400000000000000E-04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0011.0001)                 9.998000000000000E+02
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0011.0001)                 1.013250000000000E+05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0011.0001)                 3.994000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0011.0001)                 2.731500000000000E+02
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0011.0001)                 1.027000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0011.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0011.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0011.0001)                 1.027000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0011.0001)                 9.810000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0011.0001)                 9.810000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0011.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0011.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0011.0001)                 8.616400000000000E+04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0011.0001)                 7.292123516990375E-05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0011.0001)                 6.999999999999999E-05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0011.0001)                 2.000000000000000E-11
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0011.0001)                 1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0011.0001)                 1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0011.0001)                 1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0011.0001)                 1.000000000000000E-01
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0011.0001)                 2.000000000000000E-01
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0011.0001)                 2.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0011.0001)                 1.234567000000000E+05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0011.0001)                 1.234567000000000E+05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0011.0001)                 3.500000000000000E+01
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0011.0001)                 1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0011.0001)                 1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0011.0001)                       1
(PID.TID 0011.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0011.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0011.0001)    = 2 : energy conserving scheme (no hFac weight)
(PID.TID 0011.0001)    = 3 : energy conserving scheme using Wet-point averaging
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0011.0001)                      32
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0011.0001)                      32
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0011.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0011.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0011.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0011.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0011.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0011.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0011.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0011.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0011.0001) debugLevel =  /* select debug printing level */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) //
(PID.TID 0011.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0011.0001) //
(PID.TID 0011.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0011.0001)                    1000
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0011.0001)                       1
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0011.0001)                 1.000000000000000E-07
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0011.0001)                -1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0011.0001)                       1
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) //
(PID.TID 0011.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0011.0001) //
(PID.TID 0011.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0011.0001)                 5.400000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0011.0001)                 5.400000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0011.0001)                 5.400000000000000E+03       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0011.0001)                 5.400000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0011.0001)                 1.000000000000000E-02
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0011.0001)                      10
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0011.0001)                      10
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0011.0001)                 5.400000000000000E+04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0011.0001)                 3.110400000000000E+07
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0011.0001)                 2.592000000000000E+07
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0011.0001)                 5.400000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0011.0001)                 8.640000000000000E+04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0011.0001)                       2
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0011.0001)                 3.720000000000000E+06
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) //
(PID.TID 0011.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0011.0001) //
(PID.TID 0011.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0011.0001)                   T
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0011.0001)                       0
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0011.0001)                 1.234567000000000E+05
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0011.0001)                -1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0011.0001)                -1.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0011.0001)                 9.737098344693282E-04
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0011.0001)                 1.027000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0011.0001)     2 @  2.500000000000000E+03              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0011.0001)                 5.000000000000000E+03       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0011.0001)   248 @  5.000000000000000E+03              /* I =  1:248 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0011.0001)   248 @  5.000000000000000E+03              /* J =  1:248 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0011.0001)                -5.000000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0011.0001)                -5.000000000000000E+03
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0011.0001)                 6.370000000000000E+06
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0011.0001)                 6.175000000000000E+05,      /* I =  1 */
(PID.TID 0011.0001)                 6.225000000000000E+05,      /* I =  2 */
(PID.TID 0011.0001)                 6.275000000000000E+05,      /* I =  3 */
(PID.TID 0011.0001)                 6.325000000000000E+05,      /* I =  4 */
(PID.TID 0011.0001)                 6.375000000000000E+05,      /* I =  5 */
(PID.TID 0011.0001)                 6.425000000000000E+05,      /* I =  6 */
(PID.TID 0011.0001)                 6.475000000000000E+05,      /* I =  7 */
(PID.TID 0011.0001)                 6.525000000000000E+05,      /* I =  8 */
(PID.TID 0011.0001)                 6.575000000000000E+05,      /* I =  9 */
(PID.TID 0011.0001)                 6.625000000000000E+05,      /* I = 10 */
(PID.TID 0011.0001)                 6.675000000000000E+05,      /* I = 11 */
(PID.TID 0011.0001)                 6.725000000000000E+05,      /* I = 12 */
(PID.TID 0011.0001)                 6.775000000000000E+05,      /* I = 13 */
(PID.TID 0011.0001)                 6.825000000000000E+05,      /* I = 14 */
(PID.TID 0011.0001)                 6.875000000000000E+05,      /* I = 15 */
(PID.TID 0011.0001)                 6.925000000000000E+05,      /* I = 16 */
(PID.TID 0011.0001)                 6.975000000000000E+05,      /* I = 17 */
(PID.TID 0011.0001)                 7.025000000000000E+05,      /* I = 18 */
(PID.TID 0011.0001)                 7.075000000000000E+05,      /* I = 19 */
(PID.TID 0011.0001)                 7.125000000000000E+05,      /* I = 20 */
(PID.TID 0011.0001)                 7.175000000000000E+05,      /* I = 21 */
(PID.TID 0011.0001)                 7.225000000000000E+05,      /* I = 22 */
(PID.TID 0011.0001)                 7.275000000000000E+05,      /* I = 23 */
(PID.TID 0011.0001)                 7.325000000000000E+05,      /* I = 24 */
(PID.TID 0011.0001)                 7.375000000000000E+05,      /* I = 25 */
(PID.TID 0011.0001)                 7.425000000000000E+05,      /* I = 26 */
(PID.TID 0011.0001)                 7.475000000000000E+05,      /* I = 27 */
(PID.TID 0011.0001)                 7.525000000000000E+05,      /* I = 28 */
(PID.TID 0011.0001)                 7.575000000000000E+05,      /* I = 29 */
(PID.TID 0011.0001)                 7.625000000000000E+05,      /* I = 30 */
(PID.TID 0011.0001)                 7.675000000000000E+05,      /* I = 31 */
(PID.TID 0011.0001)                 7.725000000000000E+05,      /* I = 32 */
(PID.TID 0011.0001)                 7.775000000000000E+05,      /* I = 33 */
(PID.TID 0011.0001)                 7.825000000000000E+05,      /* I = 34 */
(PID.TID 0011.0001)                 7.875000000000000E+05,      /* I = 35 */
(PID.TID 0011.0001)                 7.925000000000000E+05,      /* I = 36 */
(PID.TID 0011.0001)                 7.975000000000000E+05,      /* I = 37 */
(PID.TID 0011.0001)                 8.025000000000000E+05,      /* I = 38 */
(PID.TID 0011.0001)                 8.075000000000000E+05,      /* I = 39 */
(PID.TID 0011.0001)                 8.125000000000000E+05,      /* I = 40 */
(PID.TID 0011.0001)                 8.175000000000000E+05,      /* I = 41 */
(PID.TID 0011.0001)                 8.225000000000000E+05,      /* I = 42 */
(PID.TID 0011.0001)                 8.275000000000000E+05,      /* I = 43 */
(PID.TID 0011.0001)                 8.325000000000000E+05,      /* I = 44 */
(PID.TID 0011.0001)                 8.375000000000000E+05,      /* I = 45 */
(PID.TID 0011.0001)                 8.425000000000000E+05,      /* I = 46 */
(PID.TID 0011.0001)                 8.475000000000000E+05,      /* I = 47 */
(PID.TID 0011.0001)                 8.525000000000000E+05,      /* I = 48 */
(PID.TID 0011.0001)                 8.575000000000000E+05,      /* I = 49 */
(PID.TID 0011.0001)                 8.625000000000000E+05,      /* I = 50 */
(PID.TID 0011.0001)                 8.675000000000000E+05,      /* I = 51 */
(PID.TID 0011.0001)                 8.725000000000000E+05,      /* I = 52 */
(PID.TID 0011.0001)                 8.775000000000000E+05,      /* I = 53 */
(PID.TID 0011.0001)                 8.825000000000000E+05,      /* I = 54 */
(PID.TID 0011.0001)                 8.875000000000000E+05,      /* I = 55 */
(PID.TID 0011.0001)                 8.925000000000000E+05,      /* I = 56 */
(PID.TID 0011.0001)                 8.975000000000000E+05,      /* I = 57 */
(PID.TID 0011.0001)                 9.025000000000000E+05,      /* I = 58 */
(PID.TID 0011.0001)                 9.075000000000000E+05,      /* I = 59 */
(PID.TID 0011.0001)                 9.125000000000000E+05,      /* I = 60 */
(PID.TID 0011.0001)                 9.175000000000000E+05,      /* I = 61 */
(PID.TID 0011.0001)                 9.225000000000000E+05       /* I = 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0011.0001)                 9.275000000000000E+05,      /* J =  1 */
(PID.TID 0011.0001)                 9.325000000000000E+05,      /* J =  2 */
(PID.TID 0011.0001)                 9.375000000000000E+05,      /* J =  3 */
(PID.TID 0011.0001)                 9.425000000000000E+05,      /* J =  4 */
(PID.TID 0011.0001)                 9.475000000000000E+05,      /* J =  5 */
(PID.TID 0011.0001)                 9.525000000000000E+05,      /* J =  6 */
(PID.TID 0011.0001)                 9.575000000000000E+05,      /* J =  7 */
(PID.TID 0011.0001)                 9.625000000000000E+05,      /* J =  8 */
(PID.TID 0011.0001)                 9.675000000000000E+05,      /* J =  9 */
(PID.TID 0011.0001)                 9.725000000000000E+05,      /* J = 10 */
(PID.TID 0011.0001)                 9.775000000000000E+05,      /* J = 11 */
(PID.TID 0011.0001)                 9.825000000000000E+05,      /* J = 12 */
(PID.TID 0011.0001)                 9.875000000000000E+05,      /* J = 13 */
(PID.TID 0011.0001)                 9.925000000000000E+05,      /* J = 14 */
(PID.TID 0011.0001)                 9.975000000000000E+05,      /* J = 15 */
(PID.TID 0011.0001)                 1.002500000000000E+06,      /* J = 16 */
(PID.TID 0011.0001)                 1.007500000000000E+06,      /* J = 17 */
(PID.TID 0011.0001)                 1.012500000000000E+06,      /* J = 18 */
(PID.TID 0011.0001)                 1.017500000000000E+06,      /* J = 19 */
(PID.TID 0011.0001)                 1.022500000000000E+06,      /* J = 20 */
(PID.TID 0011.0001)                 1.027500000000000E+06,      /* J = 21 */
(PID.TID 0011.0001)                 1.032500000000000E+06,      /* J = 22 */
(PID.TID 0011.0001)                 1.037500000000000E+06,      /* J = 23 */
(PID.TID 0011.0001)                 1.042500000000000E+06,      /* J = 24 */
(PID.TID 0011.0001)                 1.047500000000000E+06,      /* J = 25 */
(PID.TID 0011.0001)                 1.052500000000000E+06,      /* J = 26 */
(PID.TID 0011.0001)                 1.057500000000000E+06,      /* J = 27 */
(PID.TID 0011.0001)                 1.062500000000000E+06,      /* J = 28 */
(PID.TID 0011.0001)                 1.067500000000000E+06,      /* J = 29 */
(PID.TID 0011.0001)                 1.072500000000000E+06,      /* J = 30 */
(PID.TID 0011.0001)                 1.077500000000000E+06,      /* J = 31 */
(PID.TID 0011.0001)                 1.082500000000000E+06,      /* J = 32 */
(PID.TID 0011.0001)                 1.087500000000000E+06,      /* J = 33 */
(PID.TID 0011.0001)                 1.092500000000000E+06,      /* J = 34 */
(PID.TID 0011.0001)                 1.097500000000000E+06,      /* J = 35 */
(PID.TID 0011.0001)                 1.102500000000000E+06,      /* J = 36 */
(PID.TID 0011.0001)                 1.107500000000000E+06,      /* J = 37 */
(PID.TID 0011.0001)                 1.112500000000000E+06,      /* J = 38 */
(PID.TID 0011.0001)                 1.117500000000000E+06,      /* J = 39 */
(PID.TID 0011.0001)                 1.122500000000000E+06,      /* J = 40 */
(PID.TID 0011.0001)                 1.127500000000000E+06,      /* J = 41 */
(PID.TID 0011.0001)                 1.132500000000000E+06,      /* J = 42 */
(PID.TID 0011.0001)                 1.137500000000000E+06,      /* J = 43 */
(PID.TID 0011.0001)                 1.142500000000000E+06,      /* J = 44 */
(PID.TID 0011.0001)                 1.147500000000000E+06,      /* J = 45 */
(PID.TID 0011.0001)                 1.152500000000000E+06,      /* J = 46 */
(PID.TID 0011.0001)                 1.157500000000000E+06,      /* J = 47 */
(PID.TID 0011.0001)                 1.162500000000000E+06,      /* J = 48 */
(PID.TID 0011.0001)                 1.167500000000000E+06,      /* J = 49 */
(PID.TID 0011.0001)                 1.172500000000000E+06,      /* J = 50 */
(PID.TID 0011.0001)                 1.177500000000000E+06,      /* J = 51 */
(PID.TID 0011.0001)                 1.182500000000000E+06,      /* J = 52 */
(PID.TID 0011.0001)                 1.187500000000000E+06,      /* J = 53 */
(PID.TID 0011.0001)                 1.192500000000000E+06,      /* J = 54 */
(PID.TID 0011.0001)                 1.197500000000000E+06,      /* J = 55 */
(PID.TID 0011.0001)                 1.202500000000000E+06,      /* J = 56 */
(PID.TID 0011.0001)                 1.207500000000000E+06,      /* J = 57 */
(PID.TID 0011.0001)                 1.212500000000000E+06,      /* J = 58 */
(PID.TID 0011.0001)                 1.217500000000000E+06,      /* J = 59 */
(PID.TID 0011.0001)                 1.222500000000000E+06,      /* J = 60 */
(PID.TID 0011.0001)                 1.227500000000000E+06,      /* J = 61 */
(PID.TID 0011.0001)                 1.232500000000000E+06       /* J = 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0011.0001)                -2.500000000000000E+03       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0011.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0011.0001)                -5.000000000000000E+03       /* K =  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0011.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0011.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0011.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0011.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0011.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0011.0001)                   F
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0011.0001)                 0.000000000000000E+00
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0011.0001)    62 @  5.000000000000000E+03              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* I =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0011.0001)    62 @  2.500000000000000E+07              /* J =  1: 62 */
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0011.0001)                 1.512900000000000E+12
(PID.TID 0011.0001)     ;
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // End of Model config. summary
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) == Packages configuration : Check & print summary ==
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0011.0001) // CONFIG_CHECK : Normal End
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) Start initial hydrostatic pressure computation
(PID.TID 0011.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0011.0001) 
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) // Model current state
(PID.TID 0011.0001) // =======================================================
(PID.TID 0011.0001) 
(PID.TID 0011.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   0.00000000000000E+00  9.73534067510514E-05
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-14  1.15646588905165E-04
 cg2d: Sum(rhs),rhsMax =   7.34381444544852E-11  1.39931053647454E-04
 cg2d: Sum(rhs),rhsMax =   6.94413415658346E-11  1.64461847761115E-04
 cg2d: Sum(rhs),rhsMax =   8.13953349165786E-11  1.90586571594283E-04
 cg2d: Sum(rhs),rhsMax =   9.89603954337781E-11  2.17121091523143E-04
 cg2d: Sum(rhs),rhsMax =   1.07481801236986E-10  2.43535818497570E-04
 cg2d: Sum(rhs),rhsMax =   1.15199405570365E-10  2.69692400568323E-04
 cg2d: Sum(rhs),rhsMax =   1.22870602581315E-10  2.95542881735988E-04
 cg2d: Sum(rhs),rhsMax =   1.29077193378180E-10  3.21083681785351E-04
(PID.TID 0011.0001) %CHECKPOINT        10 ckptA
(PID.TID 0011.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0011.0001)           User time:   174.417908102274
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   323.268107175827
(PID.TID 0011.0001)          No. starts:           1
(PID.TID 0011.0001)           No. stops:           1
(PID.TID 0011.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0011.0001)           User time:   1.08797699213028
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   2.97561812400818
(PID.TID 0011.0001)          No. starts:           1
(PID.TID 0011.0001)           No. stops:           1
(PID.TID 0011.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0011.0001)           User time:   173.329894781113
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   320.292459964752
(PID.TID 0011.0001)          No. starts:           1
(PID.TID 0011.0001)           No. stops:           1
(PID.TID 0011.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0011.0001)           User time:  0.768968939781189
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   1.56397604942322
(PID.TID 0011.0001)          No. starts:           1
(PID.TID 0011.0001)           No. stops:           1
(PID.TID 0011.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0011.0001)           User time:   172.560889482498
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   318.728456020355
(PID.TID 0011.0001)          No. starts:           1
(PID.TID 0011.0001)           No. stops:           1
(PID.TID 0011.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0011.0001)           User time:   172.560796737671
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   318.728350877762
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0011.0001)           User time:   172.560620784760
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   318.728157281876
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  2.701282501220703E-004
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  2.825260162353516E-004
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0011.0001)           User time:  7.486343383789062E-005
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  9.584426879882812E-005
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  1.044273376464844E-004
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  9.298324584960938E-005
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  1.439094543457031E-003
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  1.541376113891602E-003
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  7.355213165283203E-004
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  7.991790771484375E-004
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  9.941577911376953E-003
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  1.068425178527832E-002
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:   169.833249568939
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   313.433644771576
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  1.083374023437500E-003
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  1.206874847412109E-003
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  6.504058837890625E-004
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  7.200241088867188E-004
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  7.820129394531250E-005
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  1.003742218017578E-004
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  0.275214195251465
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  0.624888181686401
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  8.964538574218750E-005
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  9.775161743164062E-005
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:   2.25566005706787
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:   4.25202202796936
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0011.0001)           User time:  0.180750846862793
(PID.TID 0011.0001)         System time:  0.000000000000000E+000
(PID.TID 0011.0001)     Wall clock time:  0.400509834289551
(PID.TID 0011.0001)          No. starts:          10
(PID.TID 0011.0001)           No. stops:          10
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // Tile <-> Tile communication statistics
(PID.TID 0011.0001) // ======================================================
(PID.TID 0011.0001) // o Tile number: 000015
(PID.TID 0011.0001) //         No. X exchanges =              0
(PID.TID 0011.0001) //            Max. X spins =              0
(PID.TID 0011.0001) //            Min. X spins =     1000000000
(PID.TID 0011.0001) //          Total. X spins =              0
(PID.TID 0011.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0011.0001) //         No. Y exchanges =              0
(PID.TID 0011.0001) //            Max. Y spins =              0
(PID.TID 0011.0001) //            Min. Y spins =     1000000000
(PID.TID 0011.0001) //          Total. Y spins =              0
(PID.TID 0011.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0011.0001) // o Thread number: 000001
(PID.TID 0011.0001) //            No. barriers =          31278
(PID.TID 0011.0001) //      Max. barrier spins =              1
(PID.TID 0011.0001) //      Min. barrier spins =              1
(PID.TID 0011.0001) //     Total barrier spins =          31278
(PID.TID 0011.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
